
<p> Display Stuff </p>
<button id = "start">Start</button>

<canvas id="ctx" width = "600" height = "800" style = "border:1px solid #000000;"></canvas>

<script src="/socket.io/socket.io.js"></script>

<script>
	//Getting the socket and the document variables
    var socket = io();
    var ctx = document.getElementById("ctx").getContext("2d");
	var WIDTH = 600;
    var HEIGHT = 1000;
    //Preparing all of the images and saving them in a list
    var Img = {};
    Img.block = new Image()
    Img.block.src = '/client/img/Greyblock.png';
    Img.block.onload = function() {
    console.log("LOADED");
    }

	//The Block class, remembers position and color
	var Block = function(NColor, position){ 
		var self = {
			color:NColor,
			x: position.x,
			y: position.y,
            id: Math.random(),
		}
		self.draw = function(){
			//draw the block here

		    ctx.drawImage(Img.block, (self.x)*50, self.y*50, 50, 50);
		}
        return self;
	
	}
    
    //Preparing a list of all blocks to keep track of.
	Block.list = {}
    
    
    //The Peice class, holds a list of all blocks.
	var Peice = function(data){
		var self = {
			blocks:data.blockList,
		
		}
		
        self.draw = function(dir){
            for(var i in self.blocks){
                self.blocks[i].draw();
            }
        }
        
		self.move = function(dir){
			for(var i in self.blocks){
                block = self.blocks[i]
               
				if(dir == 'left'){
                    block.x--;
                }
                else if(dir == 'right'){
                    block.x++;
                }
                else if(dir == 'down'){
                    block.y++;
                }
				
			}

		}
        return self;
	
	}
	
    //Preparing a 'peice' object to hold all the peice data.
    Peice.active = Peice({blockList:{}})
    
    //Creating an Update function that redraws everything with new data
    var Update = function(){
        ctx.fillStyle = 'black';
        ctx.clearRect(0,0,WIDTH,HEIGHT);
        for(var i in Block.list){
            Block.list[i].draw();
        }
        
        
        Peice.active.draw();
		console.log(Block.list);

    }
    
    
	//Socket Functions

	//Updates the active peices position`
    socket.on('activeUpdate', function(data){
        if(data.dir == 'rotate'){
            newBlockList = {}
            var val;
            var count;
            for(var i = 0; i < data.active.length; i++){
                count = 0;
                val = data.active[i];
                
                while(val > 0){
                    console.log(count);
                    if((val & 1) != 0){
                        var newBlock = Block(data.color,{x:count, y:15-i});
                        newBlockList[newBlock.id] = newBlock;
                    }
                    val = val >> 1;
                    count++;
                }
            }
            Peice.active = Peice({blockList:newBlockList});
        
        }
        else{
            Peice.active.move(data.dir);
        }
        Update();
        
    });
    
	//deletes a saved row of blocks
	socket.on('deleteRow', function(data){
        
        for(var i in Block.list){
            var block = Block.list[i];
            if(block.y == 16-data.row){
                delete Block.list[i];
            }
            else if(block.y < 16-data.row){
                block.y++;
            }
        }
        
        for(var i in Peice.active.blocks){
            var block = Peice.active.blocks[i];
            
            if(block.y == 16-data.row){
                delete Peice.active.blocks[i];
            }
            else if(block.y < 16-data.row){
                block.y++;
            }
            
        }
        
        Update();
        
	});
    
	//Take the active block and makes it a normal one.
	socket.on('setActive', function(data){
        if(Peice.active){
            for(var i in Peice.active.blocks){
                var block = Peice.active.blocks[i];
                
                Block.list[block.id] = block;
            }
        }
        
        newBlockList = {}
        var val;
        var count;
        for(var i = 0; i < data.active.length; i++){
            count = 0;
            val = data.active[i];
                
            while(val > 0){
            
                if(val & 1 > 0){
                   var newBlock = Block(data.color,{x:count, y:15-i});
                   newBlockList[newBlock.id] = newBlock;
                }
                val = val >> 1;
                count++;
            }
        }
        Peice.active = Peice({blockList:newBlockList});
        Update()
	});
	
    //Start Button (will remove in the future
    var startButton = document.getElementById('start');
	
    startButton.onclick = function(){
        socket.emit('start', {time:"Now"});
		Block.list = {};
		Peice.active = Peice({blockList:{}});
    }

	
</script>